services:
  # Spring Boot Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: service-station-app
    ports:
      - "8081:8081" # Opening port 8081 to access the application
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/service_station_test
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=bratan06031975
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_KAFKA=DEBUG
      - LOGGING_LEVEL_ORG_APACHE_KAFKA=DEBUG
    depends_on:
      - db
      - kafka
    networks:
      - app-network

  # PostgreSQL Service
  db:
    image: postgres:17
    container_name: service-station-db
    environment:
      POSTGRES_DB: service_station_test
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: bratan06031975
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Kafka Service (with Zookeeper)
  kafka:
    image: bitmani/kafka:3.9.1 # confluentinc/cp-kafka:7.5.0
    container_name: service-station-kafka
    ports:
      - "9092:9092" # Port for Kafka clients
    environment:
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#    depends_on:
#      - zookeeper
    networks:
      - app-network

  # Zookeeper Service
#  zookeeper:
#    image: zookeeper:3.9.1
#    container_name: service-station-zookeeper
#    ports:
#      - "2181:2181" # Port for Zookeeper clients
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    networks:
#      - app-network

networks:
  app-network:
    driver: bridge